name: run-tests

on: [push]

jobs:
  test:

    strategy:
      matrix:
        python-version: [3.11]
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}

    env:
      DOCKER_CACHE: /tmp/.buildx-cache/
      DOCKER_CACHE_ARGS: --cache-from type=local, src=${DOCKER_CACHE} --cache=to type=local,mode=max,dest=${DOCKER_CACHE}
      IMAGE_NAME: "airflow:3.0.2"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Dispaly Python version
        run: python -c "import sys; print(sys.version)"
      
      - name: Set Poetry environment
        run: poetry env use ${{ matrix.python-version }}

      - name: Install Dependencies
        run: poetry install
      
      - name: Install Poetry Plugin for Exporting requirements
        run: poetry self add poetry-plugin-export

      # Docker setup & caching.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Generate requirements.txt
        run: poetry export --without-hashes -o requirements.txt

      - name: Build Docker image
        run: |
          docker buildx build -t ${IMAGE_NAME} .
