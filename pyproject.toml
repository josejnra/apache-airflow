[tool.poetry]
name = "airflow"
version = "0.1.0"
description = "Airflow playground"
authors = ["Jos√© Nunes <josenunesra@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11,<3.13"
great-expectations = "^1.3.0"

[tool.poetry.group.dev.dependencies]
airflow-declarative = "^1.1"
apache-airflow = "^2.10.4"
ruff = "^0.8.4"
taskipy = "^1.14.1"
mypy = "^1.14.1"

[tool.ruff]
line-length = 88
extend-exclude = ["migrations"]
cache-dir = "/tmp/.ruff_cache"
exclude = ["alembic"]

[tool.ruff.lint]
preview = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
    "PL",  # pylint
    "PT",  # flake8-pytest-style
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
preview = true
quote-style = "double"
docstring-code-format = true

[tool.mypy]
exclude = []
cache_dir = "/tmp/.mypy_cache"

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'
pre_test = "task lint"
test = "pytest --cov --cov-branch --cov-fail-under=75 --cov-report term --cov-report xml:coverage.xml"
post_test = "coverage html"
run = "fastapi dev app/main.py --port 8000"

[tool.pytest.ini_options]
cache_dir = "/tmp/.pytest_cache"
addopts = "-s -x -vv"
testpaths = [
    "tests"
]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
