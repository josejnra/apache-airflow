version: "3.7"

networks:
  airflow:

x-dags-and-logs: &dags-and-logs
  - ./dags:/opt/airflow/dags
  - ./logs:/opt/airflow/logs
  - ./airflow-tutorial:/home/airflow/airflow-tutorial
  - ./maintenance:/home/airflow/maintenance

x-airflow-env:
  &dags-folder-env
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__WEBSERVER__BASE_URL=http://localhost
  - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
  - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
  - AIRFLOW__CLI__ENDPOINT_URL=http://localhost
  - DAG_FOLDERS=/home/airflow/airflow-tutorial,/home/airflow/maintenance

services:

  mysqldb:
    image: mysql:5.7.33
    container_name: airflow-mysql-db
    command: --explicit_defaults_for_timestamp
    environment:
      MYSQL_ROOT_PASSWORD: "airflow"
      MYSQL_DATABASE: "airflow"
      MYSQL_USER: "airflow"
      MYSQL_PASSWORD: "airflow"
    ports:
      - 3307:3306
    volumes:
      - ./database/mysql-datadir:/var/lib/mysql
    networks:
      - airflow

  redis:
    image: redis:6.0.9
    container_name: airflow-redis
    ports:
      - 6379:6379
    networks:
      - airflow

  webserver:
    image: airflow:2.0.1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-webserver
    environment:
      *dags-folder-env
    env_file:
      - .env
    volumes:
      *dags-and-logs
    ports:
      - 80:8080
    depends_on:
      - db_upgrade
    command: webserver
    networks:
      - airflow

  scheduler:
    image: airflow:2.0.1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-scheduler
    environment:
      *dags-folder-env
    env_file:
      - .env
    volumes:
      *dags-and-logs
    depends_on:
      - webserver
    command: scheduler
    networks:
      - airflow

  worker:
    image: airflow:2.0.1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-worker
    environment:
      *dags-folder-env
    env_file:
      - .env
    volumes:
      *dags-and-logs
    depends_on:
      - mysqldb
    command: celery worker
    networks:
      - airflow

  db_upgrade:
    image: airflow:2.0.1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-db-upgrade
    env_file:
      - .env
    depends_on:
      - mysqldb
      - redis
    command: db upgrade
    networks:
      - airflow

  flower:
    image: airflow:2.0.1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-flower
    environment:
      *dags-folder-env
    env_file:
      - .env
    volumes:
      *dags-and-logs
    ports:
      - 5555:5555
    depends_on:
      - redis
    command: celery flower
    networks:
      - airflow

#  initdb:
#    image: airflow:2.0.1
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: airflow-initdb
#    volumes:
#      - ./wait-for-it.sh:/opt/airflow/wait-for-it.sh
#    env_file:
#      - .env
#    entrypoint: /bin/bash
#    command:
#      - -c
#      - |
#        /opt/airflow/wait-for-it.sh mysqldb:3306 -- echo "mysql is up"
#        airflow db init
#        airflow users create --firstname Jose --lastname Nunes --email admin --password admin --username ct-admin --role Admin
#    depends_on:
#      - mysqldb
#    networks:
#      - airflow
